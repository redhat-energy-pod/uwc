# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

FROM registry.access.redhat.com/ubi8:latest
LABEL description="Common library container"

RUN yum install -y cmake git make gcc wget openssl-devel.x86_64  gcc-c++ python39 \ 
    && yum clean all \
    && rm -rf /var/cache/yum

#FROM ia_common:latest as common

# build openssl library
#FROM ia_common:latest as openssl-build
ARG OPENSSL_DIR=/tmp/openssl

RUN mkdir -p ${OPENSSL_DIR} \
    && cd ${OPENSSL_DIR} \
    && wget https://www.openssl.org/source/openssl-1.1.1g.tar.gz \
    && tar -xzvf openssl-1.1.1g.tar.gz > /dev/null 2>&1 \
    && cd openssl-1.1.1g \
    && ./config --prefix=/usr/ssl shared -fPIC no-tests  \
    && make install_sw -s 

# Build Paho C Library
#FROM eiibase as build-pahoc
RUN mkdir -p /usr/paho-c

#RUN cp -r /usr/ssl /usr/local
RUN git clone --branch develop https://github.com/eclipse/paho.mqtt.c.git \
    &&	cd paho.mqtt.c && git reset --hard ecbdce240558bc185944f54c5ef7c3cca9efb8fb \
    &&	mkdir build && cd build \
    &&	cmake -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_STATIC:BOOL=OFF \
    -DPAHO_BUILD_SAMPLES:BOOL=OFF -DPAHO_BUILD_SHARED:BOOL=ON \
    -DCMAKE_INSTALL_PREFIX=/usr/paho-c -DBUILD_TESTS:BOOL=OFF .. \
    &&	make -s \
    &&	make install

#Build Paho CPP Library
#FROM ia_common:$EII_VERSION
# RUN cp -r /usr/paho-c /usr/.
# RUN cp -r /usr/ssl /usr/ssl

RUN wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/token.cpp?raw=true -P /tmp/ \
    && wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/async_client.cpp?raw=true -P /tmp/ \
    && wget https://github.com/eclipse/paho.mqtt.cpp/blob/f3a2a52259b5463ab50eee6d1c033cba18d6e84b/src/mqtt/async_client.h?raw=true -P /tmp/ \
    && mv /tmp/'token.cpp?raw=true' /tmp/token.cpp \
    && mv /tmp/'async_client.cpp?raw=true' /tmp/async_client.cpp \
    && mv /tmp/'async_client.h?raw=true' /tmp/async_client.h

RUN git clone --branch v1.1 https://github.com/eclipse/paho.mqtt.cpp.git \
    && rm paho.mqtt.cpp/src/async_client.cpp && cp /tmp/async_client.cpp paho.mqtt.cpp/src/ \
    && rm paho.mqtt.cpp/src/mqtt/async_client.h && cp /tmp/async_client.h paho.mqtt.cpp/src/mqtt/ \ 
    && rm paho.mqtt.cpp/src/token.cpp && cp /tmp/token.cpp paho.mqtt.cpp/src/ \       
    && cd paho.mqtt.cpp \
    && mkdir build && cd build \
    && cmake -DPAHO_WITH_SSL=TRUE -DPAHO_MQTT_C_PATH=/usr/paho-c -DCMAKE_PREFIX_PATH=/usr/paho-c\
    -DCMAKE_INSTALL_PREFIX=/usr/paho-cpp -DOPENSSL_ROOT_DIR=/usr/ssl -DPAHO_BUILD_SAMPLES:BOOL=OFF \
    -DBUILD_TESTS=OFF  -DPAHO_BUILD_SHARED:BOOL=ON .. \
    && make -s \
    && make install \
    && rm -rf /tmp/*

WORKDIR /EII
RUN wget https://sourceforge.net/projects/log4cpp/files/latest/download/log4cpp-1.1.3.tar.gz \
    && tar -zxvf log4cpp-1.1.3.tar.gz \
    && cd log4cpp && mkdir build \
    && ./configure --enable-static=no --prefix=$PWD/build \
    && make \
    && make install

RUN git clone --branch yaml-cpp-0.6.3 https://github.com/jbeder/yaml-cpp.git \
    && cd yaml-cpp \
    &&	mkdir build && cd build \
    &&	cmake -DYAML_BUILD_SHARED_LIBS=ON ../ \
    &&	make yaml-cpp \
    &&	mkdir -p /usr/yaml \
    &&  mkdir -p /usr/yaml/lib \
    &&  cp lib* /usr/yaml/lib \
    &&  cp -r ../include /usr/yaml \
    && cd ../../

RUN wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz \
    && tar xzf release-1.8.0.tar.gz \
    && cd googletest-release-1.8.0 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j \
    && cp -r ../googletest/include /usr/local/include \
    && cp -r ./googlemock/gtest/libgtest*.a /usr/local/lib/ \
    && cp -r ./googlemock/libgmock*.a /usr/local/lib/ \
    && pip3 install gcovr

#RUN cp -r uwc_util /uwc_util/.

RUN	mkdir -p /uwc_util/lib/ \ 
    && mkdir -p /uwc_util/include/yaml-cpp \
    && cp -r /usr/yaml/include/* /uwc_util/include/yaml-cpp/ \
    && cp -r /usr/yaml/lib/* /uwc_util/lib/ \
    && cp -r /EII/log4cpp/build/include/* /uwc_util/include/ \
    && cp -r /EII/log4cpp/build/lib/* /uwc_util/lib/ \
    && cp -r /usr/paho-cpp/include/mqtt /usr/local/include/mqtt \
    && cp -r /usr/ssl/lib/* /usr/local/lib/ \
    && cp -r /usr/ssl/include/* /usr/local/include/ \
    && cp -r /usr/paho-cpp/lib/* /uwc_util/lib/ \
    #    && cp -r /usr/lib/libpaho* /uwc_util/lib/

    # compile wuc-lib sources
    #RUN cd /uwc_util/Release \
    RUN	export LD_LIBRARY_PATH='/uwc_util/lib' \
    &&	make clean all -s
